<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title><%= user.username %> - Dashboard</title>
    <meta
      name="description"
      content="All your assignments and tasks at one place 'Do Task For Me - Your Task Our Expertise'"
    />
    <link rel="icon" href="/images/logo.jpg" type="image/jpeg" />
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"
      rel="stylesheet"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800;900&display=swap"
      rel="stylesheet"
    />

    <style>
      :root {
        --primary: #06234a;
        --primary-light: #0d3d6e;
        --primary-dark: #041829;
        --secondary: #00d9ff;
        --accent: #ffb800;
        --success: #00e676;
        --warning: #ff9800;
        --danger: #ff3b3b;
        --light: #f8fbff;
        --white: #ffffff;
        --dark: #0a1628;
        --gray: #94a3b8;
        --card-bg: #ffffff;
        --body-bg: #f0f4f8;
        --text-primary: #0a1628;
        --text-secondary: #64748b;
        --border-color: #e2e8f0;
        --shadow-sm: 0 2px 8px rgba(6, 35, 74, 0.04);
        --shadow: 0 4px 20px rgba(6, 35, 74, 0.08);
        --shadow-lg: 0 12px 40px rgba(6, 35, 74, 0.15);
        --shadow-xl: 0 20px 60px rgba(6, 35, 74, 0.25);
        --gradient-primary: linear-gradient(135deg, #06234a 0%, #0d3d6e 100%);
        --gradient-secondary: linear-gradient(135deg, #00d9ff 0%, #00a8cc 100%);
        --gradient-accent: linear-gradient(135deg, #ffb800 0%, #ff8c00 100%);
        --gradient-success: linear-gradient(135deg, #00e676 0%, #00c853 100%);
        --sidebar-width: 300px;
        --header-height: 90px;
        --transition-smooth: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
        --transition-bounce: all 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55);
        --radius: 20px;
        --radius-lg: 24px;
      }

      [data-theme="dark"] {
        --primary: #0d3d6e;
        --primary-light: #165a9e;
        --primary-dark: #06234a;
        --secondary: #00d9ff;
        --accent: #ffb800;
        --light: #1e293b;
        --white: #0f172a;
        --dark: #f8fbff;
        --gray: #64748b;
        --card-bg: #1e293b;
        --body-bg: #0f172a;
        --text-primary: #f8fbff;
        --text-secondary: #94a3b8;
        --border-color: #334155;
        --shadow-sm: 0 2px 8px rgba(0, 0, 0, 0.2);
        --shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
        --shadow-lg: 0 12px 40px rgba(0, 0, 0, 0.4);
        --shadow-xl: 0 20px 60px rgba(0, 0, 0, 0.5);
      }

      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      html {
        scroll-behavior: smooth;
      }

      body {
        font-family: "Poppins", sans-serif;
        background: var(--body-bg);
        color: var(--text-primary);
        transition: var(--transition-smooth);
        line-height: 1.6;
        overflow-x: hidden;
        position: relative;
      }

      body::before {
        content: "";
        position: fixed;
        top: -50%;
        right: -50%;
        width: 200%;
        height: 200%;
        background: radial-gradient(
            circle at 30% 50%,
            rgba(0, 217, 255, 0.03) 0%,
            transparent 50%
          ),
          radial-gradient(
            circle at 70% 80%,
            rgba(255, 184, 0, 0.03) 0%,
            transparent 50%
          );
        animation: gradientShift 20s ease infinite;
        pointer-events: none;
        z-index: 0;
      }

      @keyframes gradientShift {
        0%,
        100% {
          transform: translate(0, 0) rotate(0deg);
        }
        33% {
          transform: translate(10%, -10%) rotate(120deg);
        }
        66% {
          transform: translate(-10%, 10%) rotate(240deg);
        }
      }

      .dashboard-container {
        display: flex;
        min-height: 100vh;
        position: relative;
        z-index: 1;
      }

      /* Sidebar Styles */
      .sidebar {
        width: var(--sidebar-width);
        background: var(--card-bg);
        box-shadow: var(--shadow-lg);
        position: fixed;
        height: 100vh;
        overflow-y: auto;
        overflow-x: hidden;
        z-index: 1000;
        transition: var(--transition-smooth);
        transform: translateX(0);
        padding: 40px 0;
        border-right: 1px solid var(--border-color);
      }

      .sidebar::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 4px;
        height: 100%;
        background: var(--gradient-secondary);
      }

      .sidebar::-webkit-scrollbar {
        width: 6px;
      }

      .sidebar::-webkit-scrollbar-track {
        background: transparent;
      }

      .sidebar::-webkit-scrollbar-thumb {
        background: var(--primary);
        border-radius: 10px;
      }

      .sidebar-header {
        padding: 0 30px 40px;
        display: flex;
        align-items: center;
        border-bottom: 2px solid var(--border-color);
        margin-bottom: 30px;
        position: relative;
      }

      .sidebar-header::after {
        content: "";
        position: absolute;
        bottom: -2px;
        left: 30px;
        width: 60px;
        height: 2px;
        background: var(--gradient-secondary);
        animation: slideRight 1s ease;
      }

      @keyframes slideRight {
        from {
          width: 0;
        }
        to {
          width: 60px;
        }
      }

      .logo {
        display: flex;
        align-items: center;
        gap: 15px;
      }

      .logo-icon {
        width: 50px;
        height: 50px;
        border-radius: 16px;
        background: var(--gradient-primary);
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 1.4rem;
        box-shadow: 0 8px 20px rgba(6, 35, 74, 0.4);
        position: relative;
        animation: float 3s ease-in-out infinite;
      }

      .logo-icon::before {
        content: "";
        position: absolute;
        inset: -3px;
        border-radius: 18px;
        background: var(--gradient-secondary);
        opacity: 0.3;
        filter: blur(8px);
        animation: pulse 2s ease-in-out infinite;
      }

      @keyframes float {
        0%,
        100% {
          transform: translateY(0px);
        }
        50% {
          transform: translateY(-5px);
        }
      }

      @keyframes pulse {
        0%,
        100% {
          opacity: 0.3;
          transform: scale(1);
        }
        50% {
          opacity: 0.5;
          transform: scale(1.1);
        }
      }

      .logo-text {
        font-size: 20px;
        font-weight: 800;
        background: var(--gradient-primary);
        -webkit-background-clip: text;
        background-clip: text;
        color: transparent;
        letter-spacing: -0.5px;
      }

      .sidebar-menu {
        padding: 0 20px;
      }

      .menu-item {
        display: flex;
        align-items: center;
        padding: 18px 24px;
        color: var(--text-secondary);
        text-decoration: none;
        transition: var(--transition-smooth);
        font-weight: 600;
        border-radius: 16px;
        margin-bottom: 10px;
        position: relative;
        overflow: hidden;
        font-size: 0.95rem;
      }

      .menu-item::before {
        content: "";
        position: absolute;
        left: 0;
        top: 0;
        height: 100%;
        width: 0;
        background: var(--gradient-secondary);
        transition: var(--transition-smooth);
        opacity: 0.1;
      }

      .menu-item::after {
        content: "";
        position: absolute;
        right: 20px;
        top: 50%;
        transform: translateY(-50%);
        width: 0;
        height: 0;
        border-top: 6px solid transparent;
        border-bottom: 6px solid transparent;
        border-left: 8px solid var(--primary);
        opacity: 0;
        transition: var(--transition-smooth);
      }

      .menu-item:hover,
      .menu-item.active {
        background: linear-gradient(
          90deg,
          rgba(6, 35, 74, 0.08) 0%,
          transparent 100%
        );
        color: var(--primary);
        transform: translateX(8px);
        padding-left: 28px;
      }

      .menu-item:hover::before,
      .menu-item.active::before {
        width: 100%;
      }

      .menu-item.active::after {
        opacity: 1;
      }

      .menu-item i {
        margin-right: 16px;
        font-size: 1.3rem;
        width: 28px;
        text-align: center;
        transition: var(--transition-bounce);
      }

      .menu-item:hover i {
        transform: scale(1.2) rotate(5deg);
      }

      .theme-toggle-container {
        padding: 30px;
        margin-top: auto;
        border-top: 2px solid var(--border-color);
      }

      .theme-toggle {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 16px 20px;
        background: var(--light);
        border-radius: 16px;
        cursor: pointer;
        transition: var(--transition-smooth);
        font-weight: 600;
        box-shadow: var(--shadow-sm);
      }

      .theme-toggle:hover {
        background: var(--primary);
        color: white;
        transform: translateY(-3px);
        box-shadow: var(--shadow);
      }

      .theme-toggle-text {
        display: flex;
        align-items: center;
        gap: 10px;
      }

      .toggle-switch {
        position: relative;
        width: 56px;
        height: 30px;
        background: var(--gray);
        border-radius: 50px;
        transition: var(--transition-smooth);
        box-shadow: inset 0 2px 6px rgba(0, 0, 0, 0.2);
      }

      .toggle-switch::after {
        content: "";
        position: absolute;
        width: 24px;
        height: 24px;
        background: white;
        border-radius: 50%;
        top: 3px;
        left: 3px;
        transition: var(--transition-bounce);
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
      }

      [data-theme="dark"] .toggle-switch {
        background: var(--gradient-secondary);
        box-shadow: inset 0 2px 6px rgba(0, 0, 0, 0.4);
      }

      [data-theme="dark"] .toggle-switch::after {
        left: 29px;
      }

      /* Main Content Styles */
      .main-content {
        flex: 1;
        margin-left: var(--sidebar-width);
        padding: 40px;
        transition: var(--transition-smooth);
        position: relative;
      }

      .header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 50px;
        animation: fadeInDown 0.8s ease;
      }

      .welcome-section h1 {
        font-size: 2.8rem;
        font-weight: 800;
        margin-bottom: 8px;
        background: var(--gradient-primary);
        -webkit-background-clip: text;
        background-clip: text;
        color: transparent;
        letter-spacing: -1px;
        position: relative;
        display: inline-block;
      }

      .welcome-section h1::after {
        content: "";
        position: absolute;
        bottom: -5px;
        left: 0;
        width: 0;
        height: 4px;
        background: var(--gradient-secondary);
        border-radius: 2px;
        animation: underlineGrow 1s ease 0.5s forwards;
      }

      @keyframes underlineGrow {
        to {
          width: 120px;
        }
      }

      .welcome-section p {
        color: var(--text-secondary);
        font-size: 1.05rem;
        font-weight: 500;
      }

      .user-info {
        display: flex;
        align-items: center;
        gap: 18px;
        background: var(--card-bg);
        padding: 16px 28px;
        border-radius: 20px;
        box-shadow: var(--shadow);
        transition: var(--transition-smooth);
        border: 1px solid var(--border-color);
      }

      .user-info:hover {
        transform: translateY(-5px);
        box-shadow: var(--shadow-lg);
      }

      .user-avatar {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        background: var(--gradient-primary);
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-weight: 700;
        font-size: 1.4rem;
        position: relative;
        box-shadow: 0 6px 20px rgba(6, 35, 74, 0.3);
      }

      .user-avatar::before {
        content: "";
        position: absolute;
        inset: -4px;
        border-radius: 50%;
        background: var(--gradient-secondary);
        opacity: 0.2;
        filter: blur(10px);
        animation: pulse 2s ease-in-out infinite;
      }

      .user-avatar::after {
        content: "";
        position: absolute;
        width: 16px;
        height: 16px;
        background: var(--success);
        border: 3px solid var(--card-bg);
        border-radius: 50%;
        bottom: 2px;
        right: 2px;
        animation: heartbeat 1.5s ease-in-out infinite;
      }

      @keyframes heartbeat {
        0%,
        100% {
          transform: scale(1);
        }
        50% {
          transform: scale(1.1);
        }
      }

      /* Stats Cards */
      .stats-container {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));
        gap: 30px;
        margin-bottom: 50px;
      }

      .stat-card {
        background: var(--card-bg);
        border-radius: var(--radius-lg);
        padding: 32px;
        box-shadow: var(--shadow);
        transition: var(--transition-smooth);
        display: flex;
        align-items: center;
        gap: 20px;
        position: relative;
        overflow: hidden;
        animation: fadeInUp 0.6s ease;
        border: 1px solid var(--border-color);
      }

      .stat-card::before {
        content: "";
        position: absolute;
        width: 100%;
        height: 5px;
        background: var(--gradient-primary);
        top: 0;
        left: 0;
        animation: shimmer 3s infinite;
      }

      @keyframes shimmer {
        0% {
          transform: translateX(-100%);
        }
        100% {
          transform: translateX(100%);
        }
      }

      .stat-card:nth-child(2)::before {
        background: var(--gradient-secondary);
        animation-delay: 0.3s;
      }

      .stat-card:nth-child(3)::before {
        background: var(--gradient-success);
        animation-delay: 0.6s;
      }

      .stat-card:nth-child(4)::before {
        background: var(--gradient-accent);
        animation-delay: 0.9s;
      }

      .stat-card:hover {
        transform: translateY(-10px) scale(1.02);
        box-shadow: var(--shadow-xl);
      }

      .stat-icon {
        width: 70px;
        height: 70px;
        border-radius: 18px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.8rem;
        color: white;
        background: var(--gradient-primary);
        box-shadow: 0 8px 24px rgba(6, 35, 74, 0.35);
        position: relative;
        transition: var(--transition-bounce);
      }

      .stat-card:hover .stat-icon {
        transform: rotate(10deg) scale(1.1);
      }

      .stat-icon::before {
        content: "";
        position: absolute;
        inset: -5px;
        border-radius: 20px;
        background: inherit;
        opacity: 0.3;
        filter: blur(15px);
      }

      .stat-card:nth-child(2) .stat-icon {
        background: var(--gradient-secondary);
        box-shadow: 0 8px 24px rgba(0, 217, 255, 0.35);
      }

      .stat-card:nth-child(3) .stat-icon {
        background: var(--gradient-success);
        box-shadow: 0 8px 24px rgba(0, 230, 118, 0.35);
      }

      .stat-card:nth-child(4) .stat-icon {
        background: var(--gradient-accent);
        box-shadow: 0 8px 24px rgba(255, 184, 0, 0.35);
      }

      .stat-info h3 {
        font-size: 2.2rem;
        font-weight: 800;
        margin-bottom: 6px;
        color: var(--text-primary);
        animation: countUp 1s ease;
      }

      @keyframes countUp {
        from {
          opacity: 0;
          transform: translateY(10px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      .stat-info p {
        color: var(--text-secondary);
        font-size: 0.95rem;
        font-weight: 600;
      }

      /* Orders Section */
      .section-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 30px;
        animation: fadeIn 0.8s ease;
      }

      .section-title {
        font-size: 1.8rem;
        font-weight: 700;
        position: relative;
        padding-left: 20px;
        color: var(--text-primary);
      }

      .section-title::before {
        content: "";
        position: absolute;
        left: 0;
        top: 50%;
        transform: translateY(-50%);
        height: 30px;
        width: 5px;
        background: var(--gradient-secondary);
        border-radius: 4px;
      }

      .orders-container {
        background: var(--card-bg);
        border-radius: var(--radius-lg);
        box-shadow: var(--shadow);
        overflow: hidden;
        animation: fadeIn 1s ease;
        border: 1px solid var(--border-color);
      }

      .orders-header {
        display: grid;
        grid-template-columns: 2fr 1fr 1fr 1fr 1fr;
        padding: 24px 32px;
        background: var(--primary);
        font-weight: 700;
        color: white;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        font-size: 0.9rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
      }

      .orders-list {
        list-style: none;
      }

      .order-item {
        display: grid;
        grid-template-columns: 2fr 1fr 1fr 1fr 1fr;
        padding: 28px 32px;
        border-bottom: 1px solid var(--border-color);
        transition: var(--transition-smooth);
        align-items: center;
        position: relative;
        background: var(--card-bg);
      }

      .order-item::before {
        content: "";
        position: absolute;
        left: 0;
        top: 0;
        height: 100%;
        width: 0;
        background: var(--gradient-secondary);
        transition: var(--transition-smooth);
        opacity: 0.1;
      }

      .order-item:hover {
        background: var(--light);
        transform: translateX(5px);
      }

      .order-item:hover::before {
        width: 5px;
      }

      .order-id {
        font-weight: 700;
        color: var(--primary);
        font-size: 0.9rem;
      }

      .order-title {
        color: var(--text-secondary);
        font-size: 0.85rem;
        margin-top: 4px;
        font-weight: 500;
      }

      .order-type {
        display: flex;
        align-items: center;
        gap: 15px;
      }

      .order-type-icon {
        width: 50px;
        height: 50px;
        border-radius: 14px;
        background: var(--light);
        display: flex;
        align-items: center;
        justify-content: center;
        color: var(--primary);
        font-size: 1.3rem;
        transition: var(--transition-bounce);
        box-shadow: var(--shadow-sm);
      }

      .order-item:hover .order-type-icon {
        transform: rotate(10deg) scale(1.1);
        background: var(--primary);
        color: white;
      }

      .status-badge {
        padding: 8px 16px;
        border-radius: 25px;
        font-size: 0.8rem;
        font-weight: 700;
        display: inline-block;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        box-shadow: var(--shadow-sm);
        transition: var(--transition-smooth);
      }

      .status-badge:hover {
        transform: scale(1.05);
      }

      .status-badge.pending {
        background: linear-gradient(
          135deg,
          rgba(255, 152, 0, 0.15) 0%,
          rgba(255, 193, 7, 0.15) 100%
        );
        color: var(--warning);
        border: 1px solid rgba(255, 152, 0, 0.3);
      }

      .status-badge.in-progress {
        background: linear-gradient(
          135deg,
          rgba(0, 217, 255, 0.15) 0%,
          rgba(0, 168, 204, 0.15) 100%
        );
        color: var(--secondary);
        border: 1px solid rgba(0, 217, 255, 0.3);
      }

      .status-badge.completed {
        background: linear-gradient(
          135deg,
          rgba(0, 230, 118, 0.15) 0%,
          rgba(0, 200, 83, 0.15) 100%
        );
        color: var(--success);
        border: 1px solid rgba(0, 230, 118, 0.3);
      }

      .payment-status {
        font-weight: 700;
        text-transform: uppercase;
        font-size: 0.85rem;
        letter-spacing: 0.5px;
      }

      .payment-status.paid {
        color: var(--success);
      }

      .payment-status.unpaid {
        color: var(--danger);
      }

      .order-actions {
        display: flex;
        gap: 10px;
      }

      .btn {
        padding: 10px 20px;
        border-radius: 12px;
        border: none;
        font-weight: 600;
        cursor: pointer;
        transition: var(--transition-smooth);
        display: inline-flex;
        align-items: center;
        gap: 8px;
        font-size: 0.85rem;
        font-family: "Poppins", sans-serif;
        text-decoration: none;
        box-shadow: var(--shadow-sm);
        position: relative;
        overflow: hidden;
      }

      .btn::before {
        content: "";
        position: absolute;
        inset: 0;
        background: linear-gradient(
          45deg,
          transparent,
          rgba(255, 255, 255, 0.3),
          transparent
        );
        transform: translateX(-100%);
        transition: var(--transition-smooth);
      }

      .btn:hover::before {
        transform: translateX(100%);
      }

      .btn-primary {
        background: var(--gradient-primary);
        color: white;
      }

      .btn-primary:hover {
        transform: translateY(-3px);
        box-shadow: 0 8px 24px rgba(6, 35, 74, 0.4);
      }

      .btn-outline {
        background: transparent;
        border: 2px solid var(--primary);
        color: var(--primary);
      }

      .btn-outline:hover {
        background: var(--primary);
        color: white;
        transform: translateY(-3px);
        box-shadow: 0 8px 24px rgba(6, 35, 74, 0.3);
      }

      .no-orders {
        padding: 80px 40px;
        text-align: center;
        color: var(--text-secondary);
      }

      .no-orders i {
        font-size: 5rem;
        margin-bottom: 25px;
        color: var(--gray);
        opacity: 0.4;
        animation: float 3s ease-in-out infinite;
      }

      .no-orders h3 {
        font-size: 1.8rem;
        margin-bottom: 12px;
        color: var(--text-primary);
      }

      /* Animations */
      @keyframes fadeIn {
        from {
          opacity: 0;
        }
        to {
          opacity: 1;
        }
      }

      @keyframes fadeInUp {
        from {
          opacity: 0;
          transform: translateY(40px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      @keyframes fadeInDown {
        from {
          opacity: 0;
          transform: translateY(-40px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      /* Floating Particles */
      .floating-particles {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;
        z-index: 0;
        overflow: hidden;
      }

      .particle {
        position: absolute;
        border-radius: 50%;
        animation: floatParticle 20s infinite linear;
      }

      .particle:nth-child(1) {
        width: 3px;
        height: 3px;
        background: var(--secondary);
        top: 20%;
        left: 10%;
        animation-delay: 0s;
        box-shadow: 0 0 10px var(--secondary);
      }

      .particle:nth-child(2) {
        width: 5px;
        height: 5px;
        background: var(--accent);
        top: 60%;
        left: 80%;
        animation-delay: -5s;
        box-shadow: 0 0 15px var(--accent);
      }

      .particle:nth-child(3) {
        width: 4px;
        height: 4px;
        background: var(--success);
        top: 40%;
        left: 50%;
        animation-delay: -10s;
        box-shadow: 0 0 12px var(--success);
      }

      .particle:nth-child(4) {
        width: 6px;
        height: 6px;
        background: var(--secondary);
        top: 80%;
        left: 30%;
        animation-delay: -15s;
        box-shadow: 0 0 18px var(--secondary);
      }

      .particle:nth-child(5) {
        width: 3px;
        height: 3px;
        background: var(--accent);
        top: 15%;
        left: 70%;
        animation-delay: -8s;
        box-shadow: 0 0 10px var(--accent);
      }

      @keyframes floatParticle {
        0% {
          transform: translate(0, 0) scale(1);
          opacity: 0;
        }
        10% {
          opacity: 1;
        }
        90% {
          opacity: 1;
        }
        100% {
          transform: translate(100px, -800px) scale(0);
          opacity: 0;
        }
      }

      /* Mobile Menu Toggle */
      .menu-toggle {
        display: none;
        position: fixed;
        top: 25px;
        left: 25px;
        z-index: 1100;
        background: var(--gradient-primary);
        color: white;
        border: none;
        width: 56px;
        height: 56px;
        border-radius: 16px;
        font-size: 1.3rem;
        cursor: pointer;
        box-shadow: var(--shadow-lg);
        transition: var(--transition-bounce);
      }

      .menu-toggle:hover {
        transform: scale(1.1) rotate(90deg);
        box-shadow: var(--shadow-xl);
      }

      .menu-toggle:active {
        transform: scale(0.95);
      }

      /* Responsive Styles */
      @media (max-width: 1200px) {
        .orders-header,
        .order-item {
          grid-template-columns: 2fr 1fr 1fr 1fr;
        }

        .order-actions {
          grid-column: 1 / -1;
          justify-content: center;
          margin-top: 20px;
        }
      }

      @media (max-width: 992px) {
        .sidebar {
          transform: translateX(-100%);
        }

        .sidebar.active {
          transform: translateX(0);
        }

        .main-content {
          margin-left: 0;
          padding: 30px 25px;
        }

        .menu-toggle {
          display: flex;
          align-items: center;
          justify-content: center;
        }

        .stats-container {
          grid-template-columns: repeat(2, 1fr);
        }
      }

      @media (max-width: 768px) {
        .stats-container {
          grid-template-columns: 1fr;
        }

        .header {
          flex-direction: column;
          align-items: flex-start;
          gap: 25px;
        }

        .user-info {
          align-self: stretch;
          justify-content: center;
        }

        .welcome-section h1 {
          font-size: 2.2rem;
        }

        .orders-header,
        .order-item {
          grid-template-columns: 1fr;
          gap: 18px;
          text-align: center;
        }

        .order-type {
          justify-content: center;
        }

        .order-actions {
          margin-top: 15px;
        }
      }

      @media (max-width: 576px) {
        .main-content {
          padding: 20px 15px;
        }

        .welcome-section h1 {
          font-size: 1.8rem;
        }

        .stat-card {
          padding: 24px;
        }

        .section-title {
          font-size: 1.5rem;
        }
      }

      /* Custom Scrollbar */
      ::-webkit-scrollbar {
        width: 10px;
        height: 10px;
      }

      ::-webkit-scrollbar-track {
        background: var(--light);
      }

      ::-webkit-scrollbar-thumb {
        background: var(--primary);
        border-radius: 10px;
      }

      ::-webkit-scrollbar-thumb:hover {
        background: var(--primary-light);
      }
    </style>
  </head>
  <body>
    <!-- Floating Particles -->
    <div class="floating-particles">
      <div class="particle"></div>
      <div class="particle"></div>
      <div class="particle"></div>
      <div class="particle"></div>
      <div class="particle"></div>
    </div>

    <!-- Mobile Menu Toggle -->
    <button class="menu-toggle" id="menuToggle">
      <i class="fas fa-bars"></i>
    </button>

    <div class="dashboard-container">
      <!-- Sidebar -->
      <aside class="sidebar" id="sidebar">
        <div class="sidebar-header">
          <div class="logo">
            <div class="logo-icon">
              <i class="fas fa-tasks"></i>
            </div>
            <div class="logo-text">Do Task For Me</div>
          </div>
        </div>

        <nav class="sidebar-menu">
          <a href="/user-dashboard" class="menu-item">
            <i class="fas fa-home"></i>
            <span>Dashboard</span>
          </a>
          <a href="/form" class="menu-item active">
            <i class="fas fa-plus-circle"></i>
            <span>New Order</span>
          </a>
          <a href="#" class="menu-item">
            <i class="fas fa-tasks"></i>
            <span>My Tasks</span>
          </a>
          <a href="#" class="menu-item">
            <i class="fas fa-chart-line"></i>
            <span>Progress</span>
          </a>
          <a href="#" class="menu-item">
            <i class="fas fa-cog"></i>
            <span>Settings</span>
          </a>
          <a href="/logout" class="menu-item">
            <i class="fas fa-sign-out-alt"></i>
            <span>Logout</span>
          </a>
        </nav>

        <div class="theme-toggle-container">
          <div class="theme-toggle" id="darkModeToggle">
            <div class="theme-toggle-text">
              <i class="fas fa-moon"></i> Dark Mode
            </div>
            <div class="toggle-switch"></div>
          </div>
        </div>
      </aside>

      <!-- Main Content -->
      <main class="main-content">
        <header class="header">
          <div class="welcome-section">
            <h1 id="usernameHeading"></h1>
            <p>Welcome back! Here's your task overview</p>
          </div>

          <div class="user-info">
            <div class="user-avatar">
              <span id="userInitials">U</span>
            </div>
            <div>
              <div class="user-name" id="userName">User</div>
              <div class="user-email" id="userEmail">user@example.com</div>
            </div>
          </div>
        </header>

        <!-- Stats Cards -->
        <div class="stats-container">
          <div class="stat-card">
            <div class="stat-icon">
              <i class="fas fa-tasks"></i>
            </div>
            <div class="stat-info">
              <h3 id="totalTasks">0</h3>
              <p>Total Tasks</p>
            </div>
          </div>

          <div class="stat-card">
            <div class="stat-icon">
              <i class="fas fa-spinner"></i>
            </div>
            <div class="stat-info">
              <h3 id="inProgress">0</h3>
              <p>In Progress</p>
            </div>
          </div>

          <div class="stat-card">
            <div class="stat-icon">
              <i class="fas fa-check-circle"></i>
            </div>
            <div class="stat-info">
              <h3 id="completed">0</h3>
              <p>Completed</p>
            </div>
          </div>

          <div class="stat-card">
            <div class="stat-icon">
              <i class="fas fa-clock"></i>
            </div>
            <div class="stat-info">
              <h3 id="pending">0</h3>
              <p>Pending</p>
            </div>
          </div>
        </div>

        <!-- Orders Section -->
        <section class="orders-section">
          <div class="section-header">
            <h2 class="section-title">Recent Orders</h2>
            <div class="section-actions">
              <button class="btn btn-primary" id="newOrderBtn">
                <i class="fas fa-plus"></i> New Order
              </button>
            </div>
          </div>

          <div class="orders-container">
            <div class="orders-header">
              <div>Assignment</div>
              <div>Status</div>
              <div>Payment</div>
              <div>Date</div>
              <div>Actions</div>
            </div>

            <ul class="orders-list" id="ordersList">
              <!-- Orders will be dynamically inserted here -->
            </ul>

            <div class="no-orders" id="noOrders" style="display: none">
              <i class="fas fa-clipboard-list"></i>
              <h3>No orders yet</h3>
              <p>Get started by creating your first order</p>
              <button class="btn btn-primary" style="margin-top: 25px">
                <i class="fas fa-plus"></i> Create Order
              </button>
            </div>
          </div>
        </section>
      </main>
    </div>

    <script>
      // Function to toggle dark mode
      function toggleDarkMode() {
        const currentTheme =
          document.documentElement.getAttribute("data-theme");
        const newTheme = currentTheme === "dark" ? "light" : "dark";
        document.documentElement.setAttribute("data-theme", newTheme);
        localStorage.setItem("theme", newTheme);

        // Update toggle icon
        const toggleIcon = document.querySelector(".theme-toggle-text i");
        if (newTheme === "dark") {
          toggleIcon.className = "fas fa-sun";
          document.querySelector(".theme-toggle-text").innerHTML =
            '<i class="fas fa-sun"></i> Light Mode';
        } else {
          toggleIcon.className = "fas fa-moon";
          document.querySelector(".theme-toggle-text").innerHTML =
            '<i class="fas fa-moon"></i> Dark Mode';
        }

        console.log(`Theme switched to: ${newTheme}`);
      }

      // Function to toggle sidebar on mobile
      function toggleSidebar() {
        const sidebar = document.getElementById("sidebar");
        sidebar.classList.toggle("active");
      }

      // Function to fetch assignments and update the dashboard
      async function fetchAssignments(email) {
        try {
          const response = await fetch(`/fetch-assignments?email=${email}`);
          const assignments = await response.json();
          const ordersList = document.getElementById("ordersList");
          const noOrders = document.getElementById("noOrders");
          ordersList.innerHTML = "";

          // Update stats
          updateStats(assignments);

          if (assignments.length > 0) {
            noOrders.style.display = "none";

            assignments.forEach((assignment, index) => {
              const li = document.createElement("li");
              li.classList.add("order-item");
              li.style.animationDelay = `${index * 0.1}s`;
              li.style.animation = "fadeInUp 0.6s ease forwards";
              li.style.opacity = "0";

              // Format date
              const formattedDate = new Date(
                assignment.createdAt
              ).toLocaleDateString("en-US", {
                year: "numeric",
                month: "short",
                day: "numeric",
              });

              // Determine status badge class
              let statusClass = "pending";
              if (assignment.status === "In Progress")
                statusClass = "in-progress";
              if (assignment.status === "Completed") statusClass = "completed";

              li.innerHTML = `
                            <div class="order-info">
                                <div class="order-type">
                                    <div class="order-type-icon">
                                        <i class="fas fa-file-alt"></i>
                                    </div>
                                    <div>
                                        <div class="order-id">${
                                          assignment._id
                                        }</div>
                                        <div class="order-title">${
                                          assignment.assignmentType
                                        }</div>
                                    </div>
                                </div>
                            </div>
                            <div class="order-status">
                                <span class="status-badge ${statusClass}">${
                assignment.status
              }</span>
                            </div>
                            <div class="order-payment">
                                <span class="payment-status ${
                                  assignment.payment_status === "paid"
                                    ? "paid"
                                    : "unpaid"
                                }">
                                    ${assignment.payment_status}
                                </span>
                            </div>
                            <div class="order-date">${formattedDate}</div>
                            <div class="order-actions">
                                <button class="btn btn-outline view-details" data-id="${
                                  assignment._id
                                }">
                                    <i class="fas fa-eye"></i> Details
                                </button>
                                <a href="${
                                  assignment.fileUrl
                                }" target="_blank" class="btn btn-outline">
                                    <i class="fas fa-file"></i> File
                                </a>
                            </div>
                        `;

              ordersList.appendChild(li);
            });

            // Add event listeners to detail buttons
            document.querySelectorAll(".view-details").forEach((button) => {
              button.addEventListener("click", function () {
                const assignmentId = this.getAttribute("data-id");
                window.location.href = `/assignment-details?username=${encodeURIComponent(
                  email
                )}&assignmentId=${encodeURIComponent(assignmentId)}`;
              });
            });
          } else {
            noOrders.style.display = "block";
          }
        } catch (error) {
          console.error("Error fetching assignments:", error.message);
        }
      }

      // Function to update stats cards
      function updateStats(assignments) {
        const totalTasks = assignments.length;
        const inProgress = assignments.filter(
          (a) => a.status === "In Progress"
        ).length;
        const completed = assignments.filter(
          (a) => a.status === "Completed"
        ).length;
        const pending = assignments.filter(
          (a) => a.status === "Pending"
        ).length;

        document.getElementById("totalTasks").textContent = totalTasks;
        document.getElementById("inProgress").textContent = inProgress;
        document.getElementById("completed").textContent = completed;
        document.getElementById("pending").textContent = pending;

        // Add animation to stats
        const statCards = document.querySelectorAll(".stat-card");
        statCards.forEach((card, index) => {
          card.style.animationDelay = `${index * 0.2}s`;
          card.style.animation = "fadeInUp 0.8s ease forwards";
        });
      }

      // Function to start typing "Welcome to your Dashboard"
      function typeWelcomeMessage(username) {
        const usernameHeading = document.getElementById("usernameHeading");
        const welcomeText = `Welcome, ${username || "User"}!`;
        usernameHeading.textContent = welcomeText;
      }

      // Apply saved theme on page load
      window.onload = async () => {
        const savedTheme = localStorage.getItem("theme") || "light";
        document.documentElement.setAttribute("data-theme", savedTheme);

        // Set toggle icon based on theme
        const toggleIcon = document.querySelector(".theme-toggle-text i");
        if (savedTheme === "dark") {
          toggleIcon.className = "fas fa-sun";
          document.querySelector(".theme-toggle-text").innerHTML =
            '<i class="fas fa-sun"></i> Light Mode';
        } else {
          toggleIcon.className = "fas fa-moon";
          document.querySelector(".theme-toggle-text").innerHTML =
            '<i class="fas fa-moon"></i> Dark Mode';
        }

        // Get user data (this would typically come from your backend)
        const userEmail = "<%= user.email %>"; // Replace with actual email from your backend
        const userName = "<%= user.username %>" || "User"; // Replace with actual name from your backend

        // Update user info
        document.getElementById("userName").textContent = userName;
        document.getElementById("userEmail").textContent = userEmail;
        document.getElementById("userInitials").textContent = userName
          .charAt(0)
          .toUpperCase();

        // Type welcome message
        typeWelcomeMessage(userName);

        // Fetch assignments
        fetchAssignments(userEmail);
      };

      // Add event listeners
      document
        .getElementById("darkModeToggle")
        .addEventListener("click", toggleDarkMode);
      document
        .getElementById("menuToggle")
        .addEventListener("click", toggleSidebar);
      document
        .getElementById("newOrderBtn")
        .addEventListener("click", function () {
          window.location.href = "/form";
        });

      // Close sidebar when clicking outside on mobile
      document.addEventListener("click", function (event) {
        const sidebar = document.getElementById("sidebar");
        const menuToggle = document.getElementById("menuToggle");
        if (
          window.innerWidth <= 992 &&
          !sidebar.contains(event.target) &&
          !menuToggle.contains(event.target) &&
          sidebar.classList.contains("active")
        ) {
          sidebar.classList.remove("active");
        }
      });
    </script>
  </body>
</html>