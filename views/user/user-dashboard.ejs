<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Dashboard</title>
    <link rel="stylesheet" href="./css/user/user-dashboard.css">
    <link rel="icon" href="/images/logo.jpg" type="image/jpeg">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">

    <style>

        /* Define CSS variables for light and dark modes */
        :root {
            --bg-color: #f0f0f0;
            --text-color: #000;
            --nav-bg-color: #333;
            --nav-text-color: #fff;
            --order-item-bg: #fff;
            --order-item-hover-bg: #f1f2f6;
            --order-cost-color: #000;
        }

        /* Dark mode variables */
        [data-theme="dark"] {
            --bg-color: #1e1e1e;
            --text-color: #fff;
            --nav-bg-color: #000;
            --nav-text-color: #fff;
            --order-item-bg: #333;
            --order-item-hover-bg: #444;
            --order-cost-color: #f1c40f;
            --link-color: #fff; /* Define link color for dark mode */
        }

        [data-theme="dark"] a {
            color: var(--link-color);
        }

        body {
            font-family: 'Roboto', sans-serif;
            background-color: var(--bg-color);
            color: var(--text-color);
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        .navbar {
            background-color: var(--nav-bg-color);
            color: var(--nav-text-color);
            padding: 10px 0;
        }

        .navbar .container {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .navbar .nav-links {
            list-style: none;
            display: flex;
        }

        .navbar .nav-links li {
            margin-right: 20px;
        }

        .navbar .nav-links li a {
            color: var(--nav-text-color);
            text-decoration: none;
            transition: color 0.3s ease;
        }

        .navbar .nav-links li a:hover {
            color: #f1c40f;
        }

        .orders-list {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
            margin-top: 20px;
            list-style-type: none;
        }

        .order-item {
            background-color: var(--order-item-bg);
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            transition: background-color 0.3s ease;
            cursor: pointer;
        }

        .order-item:hover {
            background-color: var(--order-item-hover-bg);
        }

        .order-card {
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
            margin-bottom: 10px;
        }

        .order-details {
            flex: 1;
        }

        .order-cost {
            font-size: 1.5rem;
            font-weight: bold;
            color: var(--order-cost-color);
        }

        .dark-mode-toggle {
            cursor: pointer;
            background: none;
            border: none;
            color: var(--nav-text-color);
            font-size: 1.2rem;
        }

    </style>

</head>

<body>

    <nav class="navbar">
        <div class="container">
            <div class="logo">Do Task For Me</div>
            <ul class="nav-links">
                <li><a href="/order-request-form">Order Now</a></li>
                <li><a href="/logout">Logout</a></li>
                <li><button class="dark-mode-toggle" id="darkModeToggle"><i class="fas fa-adjust"></i></button></li>
            </ul>
        </div>
    </nav>




    <div class="container">
        <h1 class="username-heading" id="usernameHeading" style="text-align: center; margin-top: 80px;"></h1>
        <div class="main-container">
    
            <div class="main">
               <div class="box-container">
                    <!-- Add more boxes as needed -->
                </div>

                
                <div class="report-container">
                    <div class="report-header">
                        <h1 class="recent-Articles">Your Orders</h1>
                    </div>
               
                    <ul class="orders-list" id="ordersList">
                        <!-- Orders will be dynamically inserted here -->
                    </ul>
                </div>
            </div>
        </div>
    </div>

    
    
    
    
    <script>
        
        // Function to toggle dark mode
        function toggleDarkMode() {
            const currentTheme = document.documentElement.getAttribute('data-theme');
            const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
            document.documentElement.setAttribute('data-theme', newTheme);
            localStorage.setItem('theme', newTheme); // Save theme preference
            console.log(`Theme switched to: ${newTheme}`);
        }


        async function fetchAssignments(email) {
            try {
                const response = await fetch(`/fetch-assignments?email=${email}`);
                const assignments = await response.json();
                const ordersList = document.getElementById('ordersList');
                ordersList.innerHTML = '';

                if (assignments.length > 0) {
        
                    assignments.forEach(assignment => {
                        const li = document.createElement('li');
                        li.classList.add('order-item');
                        li.innerHTML = `
                            <div class="order-card">
                                <div class="order-details">
                                    
                                    <p><strong>Assignment Type:</strong> ${assignment.assignmentType}</p>
                                    
                                    <p><strong>Status:</strong> ${assignment.status}</p>
                                    
                                    <p><strong>Exact Deadline:</strong> ${assignment.exactDeadline}</p>
                                    
                                    <p><strong>Grade Desired:</strong> ${assignment.gradeDesired}</p>
                                    
                                    <p><strong>Additional Details:</strong> ${assignment.additionalDetails}</p>
                                    
                                    <p><strong>Submitted On:</strong> ${new Date(assignment.createdAt).                             toLocaleString()}</p>
                                    
                                    <p><strong>Email:</strong> ${assignment.email}</p>
                                    
                                    <p><strong>Well Commented Code:</strong> ${assignment.wellCommentedCode}</p>
                                    
                                    <p><strong>Viva Preparation:</strong> ${assignment.vivaPreparation}</p>
                                    
                                    <p><strong>No Open Source:</strong> ${assignment.noOpenSource}</p>
                                    
                                    <p><strong>Programming Language:</strong> ${assignment.programmingLanguage}</p>
                                    
                                    <p><strong>Web Development Type:</strong> ${assignment.webDevelopmentType}                        </p>
                                    
                                    <p><strong>Full Stack Framework:</strong> ${assignment.fullStackFramework}                        </p>
                                    
                                    <p><strong>Top Programmer:</strong> ${assignment.topProgrammer}</p>

                                    <p><strong>File URL:</strong> <a href="${assignment.fileUrl}" target="_blank">View File</a></p>

                                </div>
                         
                                <div class="order-cost">$${assignment.totalCost}</div>
                            </div>
                        `;
                        ordersList.appendChild(li);
                    });

                } 
                
                
                else {
                    const li = document.createElement('li');
                    li.classList.add('order-item');
                    li.textContent = 'No orders found.';
                    ordersList.appendChild(li);
                }
            } 
            
            
            catch (error) {
                console.error('Error fetching assignments:', error.message);
            }
        }


        // Function to start typing "Welcome to your Dashboard"
        function typeWelcomeMessage() {
            const usernameHeading = document.getElementById('usernameHeading');
            const welcomeText = 'Welcome ðŸ¤ž,  to your Dashboard !';
            const typingSpeed = 60; // Speed of typing in milliseconds
            let charIndex = 0;

            function type() {
                if (charIndex < welcomeText.length) {
                    usernameHeading.textContent += welcomeText.charAt(charIndex);
                    charIndex++;
                    setTimeout(type, typingSpeed);
                }
            }

            type();
        }


        // Apply saved theme on page load
        window.onload = async() => {
            const savedTheme = localStorage.getItem('theme') || 'light';
            document.documentElement.setAttribute('data-theme', savedTheme);
            console.log(`Applied saved theme: ${savedTheme}`);
            typeWelcomeMessage();

            const email = '<%= user.email %>'; // Replace with actual email from your backend template engine
            fetchAssignments(email);
        }


        // Add event listener to the dark mode toggle button
        document.getElementById('darkModeToggle').addEventListener('click', toggleDarkMode);

    </script>

</body>
</html>

