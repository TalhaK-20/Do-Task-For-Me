<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet">
    <link href="./css/admin/admin-dashboard.css" rel="stylesheet">
    <link rel="icon" href="/images/logo.jpg" type="image/jpeg">    
</head>

<style>
    
    .tag {
        display: inline-block;
        padding: 0.25em 0.5em;
        background-color: #60f881;
        color: #ffffff;
        border-radius: 3px;
        font-size: 0.875em;
        font-weight: bold;
        margin-left: 0.5em;
    }

</style>

<body>

    <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <a class="navbar-brand" href="#">Admin Dashboard</a>
        <div class="collapse navbar-collapse">

            <ul class="navbar-nav ml-auto">

                <li class="nav-item">
                    <a class="nav-link" href="#"><i class="fas fa-user"></i> Admin</a>
                </li>

                <li class="nav-item">
                    <a class="nav-link" href="#"><i class="fas fa-sign-out-alt"></i> Logout</a>
                </li>

            </ul>

        </div>




    </nav>
    <div class="container-fluid">
        <div class="row">
            <nav class="col-md-3 bg-light sidebar">
                <div class="sidebar-sticky">
        
                    <ul class="nav flex-column">
        
                        <li class="nav-item">
                            <a class="nav-link active" href="#"><i class="fas fa-home"></i> Dashboard</a>
                        </li>
        
                        <li class="nav-item">
                            <a class="nav-link" href="#"><i class="fas fa-file-alt"></i> Assignments</a>
                        </li>
        
                        <li class="nav-item">
                            <a class="nav-link" href="/display-all-users"><i class="fas fa-users"></i> Users</a>
                        </li>
        
                        <li class="nav-item">
                            <a class="nav-link" href="/search-form"><i class="fas fa-chart-line"></i> search</a>
                        </li>
        
                        <li class="nav-item">
                            <a class="nav-link" href="#"><i class="fas fa-cogs"></i> Settings</a>
                        </li>

                    </ul>

                </div>

            </nav>
        


        
            <main role="main" class="col-md-9 ml-sm-auto col-lg-10 px-md-4">
                <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                    <h1 class="h2">Dashboard</h1>
                </div>
        
                <div id="assignments-container" class="row"></div>
        
            </main>
        
        </div>
    
    </div>
    





    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.6.0/dist/umd/popper.min.js"></script>
    
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    
    
    <script>
    
        document.addEventListener('DOMContentLoaded', function () {
            fetch('/admin/dashboard')
                .then(response => response.json())
    
                .then(assignments => {
                    const assignmentsContainer = document.getElementById('assignments-container');
    
    
                    assignments.forEach(assignment => {
                        const paymentTag = assignment.payment_status === 'paid' ? '<span class="tag">Payment Done</span>' : '';
                        const assignmentCard = `
                            <div class="col-md-4 mb-4">
                                <div class="card">
                                    <div class="card-body">
    
                                        <h5 class="card-title">${assignment.assignmentType}</h5>

                                        <p><strong>Task ID:</strong> ${assignment._id}</p>
    
                                        <p class="card-text">Exact Deadline: ${assignment.exactDeadline}</p>
    
                                        <p class="card-text">Email: ${assignment.email}</p>

                                        <p class="card-text">WhatsApp Number: ${assignment.whatsapp}</p>
    
                                        <p class="card-text">Additional Details: ${assignment.additionalDetails}</p>
    
                                        <p class="card-text">Well Commented Code: ${assignment.wellCommentedCode}</p>
    
                                        <p class="card-text">Viva Preparation: ${assignment.vivaPreparation}</p>
    
                                        <p class="card-text">No Open Source: ${assignment.noOpenSource}</p>
    
                                        <p class="card-text">Programming Language: ${assignment.programmingLanguage}</p>
    
                                        <p class="card-text">Web Development Type: ${assignment.webDevelopmentType}</p>
    
                                        <p class="card-text">Full Stack Framework: ${assignment.fullStackFramework}</p>
    
                                        <p class="card-text">Top Programmer: ${assignment.topProgrammer}</p>
    
                                        <p class="card-text">Total Cost (Tentative): $${assignment.totalCost.toFixed(2)}</p>
    
                                        <p class="card-text">Status: ${assignment.status}</p>
    
                                        <p class="card-text payment-status-container">Payment Status: ${assignment.payment_status} ${paymentTag}</p>
    
                                        <p><strong>File URL:</strong> <a href="${assignment.fileUrl}" target="_blank">View File</a></p>
    
                                        <div class="form-check">
                                            <input class="form-check-input work-started-checkbox" type="checkbox" value="" id="started-${assignment._id}" ${assignment.status === 'started' ? 'checked' : ''} data-id="${assignment._id}">

                                            <label class="form-check-label" for="started-${assignment._id}">Work Started</label>

                                        </div>
   
                                        <div class="form-check">
                                            <input class="form-check-input payment-status-checkbox" type="checkbox" value="" id="paid-${assignment._id}" ${assignment.payment_status === 'paid' ? 'checked' : ''} data-id="${assignment._id}">
                                            
                                            <label class="form-check-label" for="paid-${assignment._id}">Mark as Paid</label>

                                        </div>

                                    </div>

                                </div>

                            </div>
                        `;
                        
                        
                        assignmentsContainer.insertAdjacentHTML('beforeend', assignmentCard);
                    });


                    document.querySelectorAll('.work-started-checkbox').forEach(checkbox => {
                    
                        checkbox.addEventListener('change', function () {
                            const assignmentId = this.getAttribute('data-id');
                            const isChecked = this.checked;
                    
                            fetch(`/admin/update-status/${assignmentId}`, {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                    
                                body: JSON.stringify({ status: isChecked ? 'started' : 'not started' })
                            })
                    
                            .then(response => response.json())
                            .then(data => {
                    
                                if (data.message === 'Status updated') {
                                    alert('Status updated and email sent to user');
                                } 
                                
                                else {
                                    alert('Error updating status');
                                }
                            })
                            
                            .catch(error => console.error('Error updating status:', error));

                        });
                    });
                    
                    
                    document.querySelectorAll('.payment-status-checkbox').forEach(checkbox => {
                    
                        checkbox.addEventListener('change', function () {
                            const assignmentId = this.getAttribute('data-id');
                            const isChecked = this.checked;
                    
                            fetch(`/admin/update-payment-status/${assignmentId}`, {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                    
                                body: JSON.stringify({ payment_status: isChecked ? 'paid' : 'not paid yet' })
                            })
                    
                            .then(response => response.json())
                            .then(data => {
                    
                                if (data.message === 'Status updated') {
                                    alert('Payment status updated and email sent to user');
                                    const tagContainer = this.closest('.card-body').querySelector('.payment-status-container');
                    
                                    if (isChecked) {
                    
                                        if (!tagContainer.querySelector('.tag')) {
                                            const newTag = document.createElement('span');
                                            newTag.classList.add('tag');
                                            newTag.textContent = 'Payment Done';
                                            tagContainer.appendChild(newTag);
                                        }
                                    } 
                                    
                                    else {
                                        const tag = tagContainer.querySelector('.tag');
                                    
                                        if (tag) {
                                            tag.remove();
                                        }
                                    }
                                } 
                                
                                else {
                                    alert('Error updating payment status');
                                }
                            })
                            
                            .catch(error => console.error('Error updating payment status:', error));

                        });

                    });

                })
                                
                .catch(error => console.error('Error fetching assignments:', error));

        });


    </script>
</body>
</html>

